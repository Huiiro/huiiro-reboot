<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huii.generator.mapper.GenTableMapper">

    <resultMap type="com.huii.generator.entity.GenTable" id="GenTableResult">
        <id property="tableId" column="table_id"/>
        <result property="tableName" column="table_name"/>
        <result property="tableComment" column="table_comment"/>
        <result property="tableTemplate" column="table_template"/>
        <result property="className" column="class_name"/>
        <result property="variableName" column="variable_name"/>
        <result property="frontendType" column="frontend_type"/>
        <result property="sqlType" column="sql_type"/>
        <result property="authorName" column="author_name"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="moduleFunctionDesc" column="module_function_desc"/>
        <result property="moduleFunctionName" column="module_function_name"/>
        <result property="authPrefix" column="auth_prefix"/>
        <result property="requestUrl" column="request_url"/>
        <result property="genAddInterface" column="gen_add_interface"/>
        <result property="genEditInterface" column="gen_edit_interface"/>
        <result property="genDeleteInterface" column="gen_delete_interface"/>
        <result property="genImportInterface" column="gen_import_interface"/>
        <result property="genExportInterface" column="gen_export_interface"/>
        <result property="subTableName" column="sub_table_name"/>
        <result property="subTableForeignKey" column="sub_table_foreign_key"/>
        <result property="treeId" column="tree_id"/>
        <result property="treeLabelName" column="tree_label_name"/>
        <result property="parentMenuId" column="parent_menu_id"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <collection property="columns" javaType="java.util.List" resultMap="GenColumnResult"/>
    </resultMap>

    <resultMap type="com.huii.generator.entity.GenColumn" id="GenColumnResult">
        <id property="columnId" column="column_id"/>
        <result property="tableId" column="table_id"/>
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="sqlType" column="sql_type"/>
        <result property="sqlField" column="sql_field"/>
        <result property="sqlCharLength" column="sql_char_length"/>
        <result property="sqlOrder" column="sql_order"/>
        <result property="javaType" column="java_type"/>
        <result property="javaField" column="java_field"/>
        <result property="isPrimaryKey" column="is_primary_key"/>
        <result property="isIncrement" column="is_increment"/>
        <result property="isRequired" column="is_required"/>
        <result property="checkSize" column="check_size"/>
        <result property="checkUnique" column="check_unique"/>
        <result property="queryType" column="query_type"/>
        <result property="isQueryField" column="is_query_field"/>
        <result property="formType" column="form_type"/>
        <result property="dicType" column="dic_type"/>
    </resultMap>

    <select id="loadDbData" resultType="com.huii.generator.entity.GenTable">
        select table_name, table_comment
        from (
        SELECT c.relname AS table_name,
        obj_description(c.oid) AS table_comment
        FROM pg_class c
        LEFT JOIN pg_namespace n ON n.oid = c.relnamespace
        WHERE (c.relkind = ANY (ARRAY ['r'::"char", 'p'::"char"]))
        AND c.relname != 'spatial_%'::text
        AND n.nspname = 'public'::name

        ) list_table
                                                            --         TODO
        where table_name NOT LIKE 'xxl_job_%' AND table_name NOT LIKE 'gentest_%'
        AND table_name NOT IN (select table_name from gen_table)
        <if test="genTable.tableName != null and genTable.tableName != ''">
            AND lower(table_name) like lower(concat('%', #{genTable.tableName}, '%'))
        </if>
        <if test="genTable.tableComment != null and genTable.tableComment != ''">
            AND lower(table_comment) like lower(concat('%', #{genTable.tableComment}, '%'))
        </if>
    </select>
    <select id="loadDbDataGroup" resultType="com.huii.generator.entity.GenTable">
        SELECT table_name, column_name
        FROM (SELECT table_name, column_name
              FROM information_schema.columns
              WHERE table_schema = 'public') AS subquery
    </select>
    <select id="selectColumnByTableName" resultType="com.huii.generator.entity.GenColumn">
        SELECT c.column_name,
               c.data_type                as sql_type,
               c.character_maximum_length as sql_char_length,
               c.ordinal_position         as sql_order,
               d.description              as column_comment
        FROM information_schema.columns c
                 LEFT JOIN pg_description d ON c.table_name = d.objsubid::regclass::text
                 AND c.column_name = d.objsubid::regclass::text
        WHERE c.table_name = #{table}
        ORDER BY c.ordinal_position
    </select>
    <select id="selectTableAndColumns" resultMap="GenTableResult">
        SELECT *
        FROM gen_table t
                 LEFT JOIN gen_column c ON t.table_id = c.table_id
        WHERE t.table_id = #{id}
    </select>
</mapper>
